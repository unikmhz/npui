"""Initial revision

Revision ID: 92c966fd43d9
Revises: 
Create Date: 2017-09-25 15:14:57.351009

"""

# revision identifiers, used by Alembic.
revision = '92c966fd43d9'
down_revision = None
branch_labels = ('devices',)
depends_on = ['16be1c0cddd0', '7829ac7b5ad0', 'e27d4c93c89d']

from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue
from netprofile.db import ddl as npd
from netprofile.db import fields as npf

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices_flags_types',
    sa.Column('dftid', npf.UInt32(), npd.Comment('Device flag type ID'), nullable=False, default=sa.Sequence('devices_flags_types_dftid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device flag type name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Device flag type description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('dftid', name=op.f('devices_flags_types_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_flags_types', 'Device flag types')
    op.create_index('devices_flags_types_u_name', 'devices_flags_types', ['name'], unique=True)
    op.create_table('devices_types_cats',
    sa.Column('dtcid', npf.UInt32(), npd.Comment('Device type category ID'), nullable=False, default=sa.Sequence('devices_types_cats_dtcid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device type category name'), nullable=False),
    sa.PrimaryKeyConstraint('dtcid', name=op.f('devices_types_cats_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_cats', 'Device categories')
    op.create_index('devices_types_cats_u_name', 'devices_types_cats', ['name'], unique=True)
    op.create_table('devices_types_flags_types',
    sa.Column('dtftid', npf.UInt32(), npd.Comment('Device type flag type ID'), nullable=False, default=sa.Sequence('devices_types_flags_types_dtftid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device type flag type name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Device type flag type description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('dtftid', name=op.f('devices_types_flags_types_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_flags_types', 'Device type flag types')
    op.create_index('devices_types_flags_types_u_name', 'devices_types_flags_types', ['name'], unique=True)
    op.create_table('devices_types_mfct',
    sa.Column('dtmid', npf.UInt32(), npd.Comment('Device type manufacturer ID'), nullable=False, default=sa.Sequence('devices_types_mfct_dtmid_seq')),
    sa.Column('sname', sa.Unicode(length=48), npd.Comment('Device type manufacturer short name'), nullable=False),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device type manufacturer name'), nullable=False),
    sa.Column('website', sa.Unicode(length=255), npd.Comment('Device type manufacturer website URL'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('dtmid', name=op.f('devices_types_mfct_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_mfct', 'Device type manufacturers')
    op.create_index('devices_types_mfct_u_name', 'devices_types_mfct', ['name'], unique=True)
    op.create_table('netdev_media',
    sa.Column('ndmid', npf.UInt32(), npd.Comment('Network device media ID'), nullable=False, default=sa.Sequence('netdev_media_ndmid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Network device media name'), nullable=False),
    sa.Column('iftype', npf.UInt32(), npd.Comment('IANA ifType MIB value'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('iftype_alt', npf.UInt32(), npd.Comment('Alternate IANA ifType MIB value'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('physical', npf.NPBoolean(), npd.Comment('Is media type physical'), server_default=npf.npbool(True), nullable=False),
    sa.Column('speed', npf.UInt64(), npd.Comment('Fixed speed of the media (if any, in bps)'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Media type description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('ndmid', name=op.f('netdev_media_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('netdev_media', "Network device interfaces' media types")
    op.create_index('netdev_media_i_iftype', 'netdev_media', ['iftype'], unique=False)
    op.create_index('netdev_media_u_name', 'netdev_media', ['name'], unique=True)
    op.create_table('devices_classes',
    sa.Column('dclsid', npf.UInt32(), npd.Comment('Device class ID'), nullable=False, default=sa.Sequence('devices_classes_dclsid_seq', start=101, increment=1)),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device class name'), nullable=False),
    sa.Column('npmodid', npf.UInt32(), npd.Comment('NetProfile module ID'), server_default=sa.text('1'), nullable=False),
    sa.Column('model', npf.ASCIIString(length=255), npd.Comment('ORM declarative model class name'), nullable=False),
    sa.Column('longname', sa.Unicode(length=255), npd.Comment('Long device class name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('plural', sa.Unicode(length=255), npd.Comment('Device class plural string'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Device class description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['npmodid'], ['np_modules.npmodid'], name='devices_classes_fk_npmodid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dclsid', name=op.f('devices_classes_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_classes', 'Device classes')
    op.create_index('devices_classes_u_longname', 'devices_classes', ['longname'], unique=True)
    op.create_index('devices_classes_u_name', 'devices_classes', ['name'], unique=True)
    op.create_index('devices_classes_u_plural', 'devices_classes', ['plural'], unique=True)
    op.create_index('devices_classes_u_spec', 'devices_classes', ['npmodid', 'model'], unique=True)
    op.create_table('devices_types_def',
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False, default=sa.Sequence('devices_types_def_dtid_seq')),
    sa.Column('dclsid', npf.UInt32(), npd.Comment('Device class ID'), nullable=False),
    sa.Column('dtmid', npf.UInt32(), npd.Comment('Device type manufacturer ID'), nullable=False),
    sa.Column('dtcid', npf.UInt32(), npd.Comment('Device type category ID'), nullable=False),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Device type name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Device type description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['dclsid'], ['devices_classes.dclsid'], name='devices_types_def_fk_dclsid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['dtcid'], ['devices_types_cats.dtcid'], name='devices_types_def_fk_dtcid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['dtmid'], ['devices_types_mfct.dtmid'], name='devices_types_def_fk_dtmid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('dtid', name=op.f('devices_types_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_def', 'Device types')
    op.create_index('devices_types_def_i_dclsid', 'devices_types_def', ['dclsid'], unique=False)
    op.create_index('devices_types_def_i_dtcid', 'devices_types_def', ['dtcid'], unique=False)
    op.create_index('devices_types_def_u_dt', 'devices_types_def', ['dtmid', 'name'], unique=True)
    op.create_table('devices_types_flags_def',
    sa.Column('dtfid', npf.UInt32(), npd.Comment('Device type flag ID'), nullable=False, default=sa.Sequence('devices_types_flags_def_dtfid_seq')),
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False),
    sa.Column('dtftid', npf.UInt32(), npd.Comment('Device type flag type ID'), nullable=False),
    sa.ForeignKeyConstraint(['dtftid'], ['devices_types_flags_types.dtftid'], name='devices_types_flags_def_fk_dtftid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dtid'], ['devices_types_def.dtid'], name='devices_types_flags_def_fk_dtid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dtfid', name=op.f('devices_types_flags_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_flags_def', 'Device type flags')
    op.create_index('devices_types_flags_def_i_dtftid', 'devices_types_flags_def', ['dtftid'], unique=False)
    op.create_index('devices_types_flags_def_u_dtf', 'devices_types_flags_def', ['dtid', 'dtftid'], unique=True)
    op.create_table('devices_types_network',
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False),
    sa.Column('manageable', npf.NPBoolean(), npd.Comment('Is manageable?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('modular', npf.NPBoolean(), npd.Comment('Is modular/slotted/chassis?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('icon', npf.ASCIIString(length=16), npd.Comment('Schematic icon name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('handler', npf.ASCIIString(length=255), npd.Comment('Device handler class'), server_default='default', nullable=True),
    sa.ForeignKeyConstraint(['dtid'], ['devices_types_def.dtid'], name='devices_types_network_fk_dtid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dtid', name=op.f('devices_types_network_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_network', 'Network device types')
    op.create_trigger('netprofile_devices', 'devices_types_network', 'after', 'delete', '92c966fd43d9')
    op.create_table('devices_types_simple',
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False),
    sa.ForeignKeyConstraint(['dtid'], ['devices_types_def.dtid'], name='devices_types_simple_fk_dtid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dtid', name=op.f('devices_types_simple_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_simple', 'Simple device types')
    op.create_trigger('netprofile_devices', 'devices_types_simple', 'after', 'delete', '92c966fd43d9')
    op.create_table('devices_def',
    sa.Column('did', npf.UInt32(), npd.Comment('Device ID'), nullable=False, default=sa.Sequence('devices_def_did_seq')),
    sa.Column('dclsid', npf.UInt32(), npd.Comment('Device class ID'), nullable=False),
    sa.Column('serial', sa.Unicode(length=64), npd.Comment('Device serial'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False),
    sa.Column('oper', npf.NPBoolean(), npd.Comment('Is operational?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('placeid', npf.UInt32(), npd.Comment('Place ID'), nullable=False),
    sa.Column('entityid', npf.UInt32(), npd.Comment("Owner's entity ID"), server_default=sa.text('NULL'), nullable=True),
    sa.Column('ctime', sa.TIMESTAMP(), npd.Comment('Creation timestamp'), server_default=FetchedValue(), nullable=True),
    sa.Column('mtime', sa.TIMESTAMP(), npd.Comment('Last modification timestamp'), server_default=npd.CurrentTimestampDefault(on_update=True), nullable=False),
    sa.Column('itime', sa.TIMESTAMP(), npd.Comment('Installation timestamp'), server_default=FetchedValue(), nullable=True),
    sa.Column('cby', npf.UInt32(), npd.Comment('Created by'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mby', npf.UInt32(), npd.Comment('Modified by'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('iby', npf.UInt32(), npd.Comment('Installed by'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Device description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['cby'], ['users.uid'], name='devices_def_fk_cby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dclsid'], ['devices_classes.dclsid'], name='devices_def_fk_dclsid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['dtid'], ['devices_types_def.dtid'], name='devices_def_fk_dtid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['entityid'], ['entities_def.entityid'], name='devices_def_fk_entityid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['iby'], ['users.uid'], name='devices_def_fk_iby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mby'], ['users.uid'], name='devices_def_fk_mby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['placeid'], ['addr_places.placeid'], name='devices_def_fk_placeid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('did', name=op.f('devices_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_def', 'Devices')
    op.create_trigger('netprofile_devices', 'devices_def', 'before', 'insert', '92c966fd43d9')
    op.create_trigger('netprofile_devices', 'devices_def', 'before', 'update', '92c966fd43d9')
    op.create_trigger('netprofile_devices', 'devices_def', 'after', 'insert', '92c966fd43d9')
    op.create_trigger('netprofile_devices', 'devices_def', 'after', 'update', '92c966fd43d9')
    op.create_trigger('netprofile_devices', 'devices_def', 'after', 'delete', '92c966fd43d9')
    op.create_index('devices_def_i_cby', 'devices_def', ['cby'], unique=False)
    op.create_index('devices_def_i_dclsid', 'devices_def', ['dclsid'], unique=False)
    op.create_index('devices_def_i_dtid', 'devices_def', ['dtid'], unique=False)
    op.create_index('devices_def_i_entityid', 'devices_def', ['entityid'], unique=False)
    op.create_index('devices_def_i_iby', 'devices_def', ['iby'], unique=False)
    op.create_index('devices_def_i_mby', 'devices_def', ['mby'], unique=False)
    op.create_index('devices_def_i_placeid', 'devices_def', ['placeid'], unique=False)
    op.create_table('devices_types_files',
    sa.Column('dtfid', npf.UInt32(), npd.Comment('DeviceType-file mapping ID'), nullable=False, default=sa.Sequence('deveices_types_files_dtfid_seq')),
    sa.Column('dtid', npf.UInt32(), npd.Comment('Device type ID'), nullable=False),
    sa.Column('fileid', npf.UInt32(), npd.Comment('File ID'), nullable=False),
    sa.ForeignKeyConstraint(['dtid'], ['devices_types_def.dtid'], name='devices_types_files_fk_dtid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fileid'], ['files_def.fileid'], name='devices_types_files_fk_fileid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dtfid', name=op.f('devices_types_files_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_types_files', 'File mappings to devices types')
    op.create_index('devices_types_files_i_fileid', 'devices_types_files', ['fileid'], unique=False)
    op.create_index('devices_types_files_u_dtfl', 'devices_types_files', ['dtid', 'fileid'], unique=True)
    op.create_table('devices_flags_def',
    sa.Column('dfid', npf.UInt32(), npd.Comment('Device flag ID'), nullable=False, default=sa.Sequence('devices_flags_def_dfid_seq')),
    sa.Column('did', npf.UInt32(), npd.Comment('Device ID'), nullable=False),
    sa.Column('dftid', npf.UInt32(), npd.Comment('Device flag type ID'), nullable=False),
    sa.ForeignKeyConstraint(['dftid'], ['devices_flags_types.dftid'], name='devices_flags_def_fk_dftid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['did'], ['devices_def.did'], name='devices_flags_def_fk_did', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dfid', name=op.f('devices_flags_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_flags_def', 'Device flags')
    op.create_index('devices_flags_def_i_dftid', 'devices_flags_def', ['dftid'], unique=False)
    op.create_index('devices_flags_def_u_df', 'devices_flags_def', ['did', 'dftid'], unique=True)
    op.create_table('devices_network',
    sa.Column('did', npf.UInt32(), npd.Comment('Device ID'), nullable=False),
    sa.Column('hostid', npf.UInt32(), npd.Comment('Host ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('snmptype', npf.DeclEnumType(name='SNMPTypeField', values=['v1', 'v2c', 'v3']), npd.Comment('SNMP access type'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('cs_ro', npf.ASCIIString(length=255), npd.Comment('SNMPv2 read-only community'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('cs_rw', npf.ASCIIString(length=255), npd.Comment('SNMPv2 read-write community'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3user', npf.ASCIIString(length=255), npd.Comment('SNMPv3 user name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3scheme', npf.DeclEnumType(name='SNMPV3SchemeField', values=['noAuthNoPriv', 'authNoPriv', 'authPriv']), npd.Comment('SNMPv3 security level'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3authproto', npf.DeclEnumType(name='SNMPV3ProtoField', values=['MD5', 'SHA']), npd.Comment('SNMPv3 authentication protocol'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3authpass', npf.ASCIIString(length=255), npd.Comment('SNMPv3 authentication passphrase'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3privproto', npf.DeclEnumType(name='SNMPV3PrivProtoField', values=['DES', '3DES', 'AES128', 'AES192', 'AES256']), npd.Comment('SNMPv3 privacy protocol'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('v3privpass', npf.ASCIIString(length=255), npd.Comment('SNMPv3 privacy passphrase'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mgmttype', npf.DeclEnumType(name='SNMPV3MgmtTypeField', values=['ssh', 'telnet', 'vnc', 'rdp']), npd.Comment('Management access type'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mgmtuser', sa.Unicode(length=255), npd.Comment('Management user name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mgmtpass', sa.Unicode(length=255), npd.Comment('Management password'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mgmtepass', sa.Unicode(length=255), npd.Comment('Management enable password'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('remoteid', sa.VARBINARY(length=134), npd.Comment('Binary agent remote ID'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['did'], ['devices_def.did'], name='devices_network_fk_did', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hostid'], ['hosts_def.hostid'], name='devices_network_fk_hostid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('did', name=op.f('devices_network_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_network', 'Network devices')
    op.create_trigger('netprofile_devices', 'devices_network', 'after', 'delete', '92c966fd43d9')
    op.create_index('devices_network_u_hostid', 'devices_network', ['hostid'], unique=True)
    op.create_table('devices_simple',
    sa.Column('did', npf.UInt32(), npd.Comment('Device ID'), nullable=False),
    sa.ForeignKeyConstraint(['did'], ['devices_def.did'], name='devices_simple_fk_did', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('did', name=op.f('devices_simple_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('devices_simple', 'Simple devices')
    op.create_trigger('netprofile_devices', 'devices_simple', 'after', 'delete', '92c966fd43d9')
    op.create_table('netdev_ifaces',
    sa.Column('ifid', npf.UInt32(), npd.Comment('Network device interface ID'), nullable=False, default=sa.Sequence('netdev_ifaces_ifid_seq')),
    sa.Column('did', npf.UInt32(), npd.Comment('Network device ID'), nullable=False),
    sa.Column('ndmid', npf.UInt32(), npd.Comment('Network device media ID'), nullable=False),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Interface name (filled manually or via SNMP)'), nullable=False),
    sa.Column('index', npf.UInt32(), npd.Comment('Interface SNMP ifIndex'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Interface description (filled manually or via SNMP)'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['did'], ['devices_network.did'], name='netdev_ifaces_fk_did', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ndmid'], ['netdev_media.ndmid'], name='netdev_ifaces_fk_ndmid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('ifid', name=op.f('netdev_ifaces_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('netdev_ifaces', 'Network device interfaces')
    op.create_index('netdev_ifaces_i_ndmid', 'netdev_ifaces', ['ndmid'], unique=False)
    op.create_index('netdev_ifaces_u_devifindex', 'netdev_ifaces', ['did', 'index'], unique=True)
    op.create_index('netdev_ifaces_u_devifname', 'netdev_ifaces', ['did', 'name'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('netdev_ifaces_u_devifname', table_name='netdev_ifaces')
    op.drop_index('netdev_ifaces_u_devifindex', table_name='netdev_ifaces')
    op.drop_index('netdev_ifaces_i_ndmid', table_name='netdev_ifaces')
    op.drop_table('netdev_ifaces')
    op.drop_table('devices_simple')
    op.drop_index('devices_network_u_hostid', table_name='devices_network')
    op.drop_table('devices_network')
    op.drop_index('devices_flags_def_u_df', table_name='devices_flags_def')
    op.drop_index('devices_flags_def_i_dftid', table_name='devices_flags_def')
    op.drop_table('devices_flags_def')
    op.drop_index('devices_types_files_u_dtfl', table_name='devices_types_files')
    op.drop_index('devices_types_files_i_fileid', table_name='devices_types_files')
    op.drop_table('devices_types_files')
    op.drop_index('devices_def_i_placeid', table_name='devices_def')
    op.drop_index('devices_def_i_mby', table_name='devices_def')
    op.drop_index('devices_def_i_iby', table_name='devices_def')
    op.drop_index('devices_def_i_entityid', table_name='devices_def')
    op.drop_index('devices_def_i_dtid', table_name='devices_def')
    op.drop_index('devices_def_i_dclsid', table_name='devices_def')
    op.drop_index('devices_def_i_cby', table_name='devices_def')
    op.drop_table('devices_def')
    op.drop_table('devices_types_simple')
    op.drop_table('devices_types_network')
    op.drop_index('devices_types_flags_def_u_dtf', table_name='devices_types_flags_def')
    op.drop_index('devices_types_flags_def_i_dtftid', table_name='devices_types_flags_def')
    op.drop_table('devices_types_flags_def')
    op.drop_index('devices_types_def_u_dt', table_name='devices_types_def')
    op.drop_index('devices_types_def_i_dtcid', table_name='devices_types_def')
    op.drop_index('devices_types_def_i_dclsid', table_name='devices_types_def')
    op.drop_table('devices_types_def')
    op.drop_index('devices_classes_u_spec', table_name='devices_classes')
    op.drop_index('devices_classes_u_plural', table_name='devices_classes')
    op.drop_index('devices_classes_u_name', table_name='devices_classes')
    op.drop_index('devices_classes_u_longname', table_name='devices_classes')
    op.drop_table('devices_classes')
    op.drop_index('netdev_media_u_name', table_name='netdev_media')
    op.drop_index('netdev_media_i_iftype', table_name='netdev_media')
    op.drop_table('netdev_media')
    op.drop_index('devices_types_mfct_u_name', table_name='devices_types_mfct')
    op.drop_table('devices_types_mfct')
    op.drop_index('devices_types_flags_types_u_name', table_name='devices_types_flags_types')
    op.drop_table('devices_types_flags_types')
    op.drop_index('devices_types_cats_u_name', table_name='devices_types_cats')
    op.drop_table('devices_types_cats')
    op.drop_index('devices_flags_types_u_name', table_name='devices_flags_types')
    op.drop_table('devices_flags_types')
    # ### end Alembic commands ###

